- name: Install PostgreSQL
  apt:
    name: "{{ item }}"
    update_cache: true
    state: present
  with_items:
    - 'postgresql'
    - 'postgresql-contrib'
    - 'python-psycopg2'

- name: Set password for postgres user
  user:
    name: postgres
    password: $6$StrongRandomSalt$rsVz2fwG9ne6zE6.esJlKtTR0PdFsE987iZXJZLGNuKgsXeqKGy9ZrZPrFcWOuZx/3lmWghKpYAbA.nJSSxvV1

- name: Create user sonar
  postgresql_user:
    name: sonar
    password: StrongPassword
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true

- name: Create database
  postgresql_db:
    name: sonar
    owner: sonar
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true    

- name: Download Sonar
  get_url:
    url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-6.4.zip
    dest: /tmp/sonarqube-6.4.zip
    mode: '0440'

- name: Unarchive a file that is already on the remote machine
  unarchive:
    src: /tmp/sonarqube-6.4.zip
    dest: /opt
    remote_src: yes

- name: Create a symbolic link to artifactory directory
  file:
    src: /opt/sonarqube-6.4
    dest: /opt/sonarqube
    state: link

- name: Copy default settings
  copy:
    src: /vagrant/provision/sonar.properties
    dest: /opt/sonarqube/conf/sonar.properties

- name: Copy service settings
  copy:
    src: /vagrant/provision/sonar.service
    dest: /etc/systemd/system/sonar.service

- name: Make sure a service is running
  systemd:
    state: started
    daemon_reload: yes
    name: sonar
    no_block: yes

- name: Wait for port 9000 to become open on the host
  wait_for:
    port: 9000
    delay: 30    